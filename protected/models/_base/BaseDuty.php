<?php

/**
 * This is the model base class for the table "duty".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Duty".
 *
 * Columns in table "duty" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $task_id
 * @property integer $client_to_task_type_to_duty_type_id
 * @property string $updated
 * @property string $generic_id
 * @property integer $staff_id
 *
 */
abstract class BaseDuty extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'duty';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Duty|Duties', $n);
	}

	public static function representingColumn() {
		return array(
			'task_id',
			'client_to_task_type_to_duty_type_id',
		);
	}

	public function rules() {
		return array(
			array('task_id, client_to_task_type_to_duty_type_id, generic_id, staff_id', 'required'),
			array('client_to_task_type_to_duty_type_id, staff_id', 'numerical', 'integerOnly'=>true),
			array('task_id, generic_id', 'length', 'max'=>10),
			array('updated', 'safe'),
			array('updated', 'default', 'setOnEmpty' => true, 'value' => null),
			array('task_id, client_to_task_type_to_duty_type_id, updated, generic_id, staff_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'task_id' => null,
			'client_to_task_type_to_duty_type_id' => null,
			'updated' => Yii::t('app', 'Updated'),
			'generic_id' => null,
			'staff_id' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('task_id', $this->task_id);
		$criteria->compare('client_to_task_type_to_duty_type_id', $this->client_to_task_type_to_duty_type_id);
		$criteria->compare('updated', $this->updated, true);
		$criteria->compare('generic_id', $this->generic_id);
		$criteria->compare('staff_id', $this->staff_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}