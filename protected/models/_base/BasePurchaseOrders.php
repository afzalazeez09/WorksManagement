<?php

/**
 * This is the model base class for the table "purchase_orders".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "PurchaseOrders".
 *
 * Columns in table "purchase_orders" available as properties of the model,
 * followed by relations of table "purchase_orders" available as properties of the model.
 *
 * @property string $id
 * @property integer $supplier_id
 * @property string $purchase_order_no
 * @property integer $staff_id
 *
 * @property Supplier $supplier
 * @property Staff $staff
 * @property Task[] $tasks
 */
abstract class BasePurchaseOrders extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'purchase_orders';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'PurchaseOrders|PurchaseOrders', $n);
	}

	public static function representingColumn() {
		return 'purchase_order_no';
	}

	public function rules() {
		return array(
			array('supplier_id, purchase_order_no, staff_id', 'required'),
			array('supplier_id, staff_id', 'numerical', 'integerOnly'=>true),
			array('purchase_order_no', 'length', 'max'=>64),
			array('id, supplier_id, purchase_order_no, staff_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'supplier' => array(self::BELONGS_TO, 'Supplier', 'supplier_id'),
			'staff' => array(self::BELONGS_TO, 'Staff', 'staff_id'),
			'tasks' => array(self::HAS_MANY, 'Task', 'purchase_orders_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'supplier_id' => null,
			'purchase_order_no' => Yii::t('app', 'Purchase Order No'),
			'staff_id' => null,
			'supplier' => null,
			'staff' => null,
			'tasks' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('supplier_id', $this->supplier_id);
		$criteria->compare('purchase_order_no', $this->purchase_order_no, true);
		$criteria->compare('staff_id', $this->staff_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}