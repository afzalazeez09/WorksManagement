<?php

/**
 * This is the model base class for the table "AuthAssignment".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "AuthAssignment".
 *
 * Columns in table "AuthAssignment" available as properties of the model,
 * followed by relations of table "AuthAssignment" available as properties of the model.
 *
 * @property integer $id
 * @property string $itemname
 * @property integer $userid
 * @property string $bizrule
 * @property string $data
 * @property integer $deleted
 * @property integer $staff_id
 *
 * @property AuthItem $itemname0
 * @property Staff $user
 * @property Staff $staff
 * @property Project[] $projects
 */
abstract class BaseAuthAssignment extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'AuthAssignment';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'AuthAssignment|AuthAssignments', $n);
	}

	public static function representingColumn() {
		return 'itemname';
	}

	public function rules() {
		return array(
			array('itemname, userid, staff_id', 'required'),
			array('userid, deleted, staff_id', 'numerical', 'integerOnly'=>true),
			array('itemname', 'length', 'max'=>64),
			array('bizrule, data', 'safe'),
			array('bizrule, data, deleted', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, itemname, userid, bizrule, data, deleted, staff_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'itemname0' => array(self::BELONGS_TO, 'AuthItem', 'itemname'),
			'user' => array(self::BELONGS_TO, 'Staff', 'userid'),
			'staff' => array(self::BELONGS_TO, 'Staff', 'staff_id'),
			'projects' => array(self::MANY_MANY, 'Project', 'project_to_AuthAssignment(AuthAssignment_id, project_id)'),
		);
	}

	public function pivotModels() {
		return array(
			'projects' => 'ProjectToAuthAssignment',
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'itemname' => null,
			'userid' => null,
			'bizrule' => Yii::t('app', 'Bizrule'),
			'data' => Yii::t('app', 'Data'),
			'deleted' => Yii::t('app', 'Deleted'),
			'staff_id' => null,
			'itemname0' => null,
			'user' => null,
			'staff' => null,
			'projects' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('itemname', $this->itemname);
		$criteria->compare('userid', $this->userid);
		$criteria->compare('bizrule', $this->bizrule, true);
		$criteria->compare('data', $this->data, true);
		$criteria->compare('deleted', $this->deleted);
		$criteria->compare('staff_id', $this->staff_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}