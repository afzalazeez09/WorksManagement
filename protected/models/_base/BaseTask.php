<?php

/**
 * This is the model base class for the table "task".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Task".
 *
 * Columns in table "task" available as properties of the model,
 * followed by relations of table "task" available as properties of the model.
 *
 * @property string $id
 * @property string $description
 * @property string $day
 * @property string $purchase_orders_id
 * @property string $crew_id
 * @property string $project_id
 * @property integer $client_to_task_type_client_id
 * @property integer $client_to_task_type_task_type_id
 * @property integer $staff_id
 *
 * @property ClientToTaskTypeToDutyType[] $clientToTaskTypeToDutyTypes
 * @property Material[] $materials
 * @property Reschedule[] $reschedules
 * @property Reschedule[] $reschedules1
 * @property PurchaseOrders $purchaseOrders
 * @property Crew $crew
 * @property Day $day0
 * @property Project $project
 * @property ClientToTaskType $clientToTaskTypeClient
 * @property ClientToTaskType $clientToTaskTypeTaskType
 * @property Staff $staff
 * @property Assembly[] $assemblies
 * @property TaskToGenericTaskType[] $taskToGenericTaskTypes
 * @property ResourceType[] $resourceTypes
 * @property TaskType[] $taskTypes
 */
abstract class BaseTask extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'task';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Task|Tasks', $n);
	}

	public static function representingColumn() {
		return 'description';
	}

	public function rules() {
		return array(
			array('description, day, purchase_orders_id, crew_id, project_id, client_to_task_type_client_id, client_to_task_type_task_type_id, staff_id', 'required'),
			array('client_to_task_type_client_id, client_to_task_type_task_type_id, staff_id', 'numerical', 'integerOnly'=>true),
			array('day, purchase_orders_id, crew_id, project_id', 'length', 'max'=>10),
			array('id, description, day, purchase_orders_id, crew_id, project_id, client_to_task_type_client_id, client_to_task_type_task_type_id, staff_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'clientToTaskTypeToDutyTypes' => array(self::MANY_MANY, 'ClientToTaskTypeToDutyType', 'duty(task_id, client_to_task_type_to_duty_type_id)'),
			'materials' => array(self::MANY_MANY, 'Material', 'material_to_task(task_id, material_id)'),
			'reschedules' => array(self::HAS_MANY, 'Reschedule', 'task_old'),
			'reschedules1' => array(self::HAS_MANY, 'Reschedule', 'task_new'),
			'purchaseOrders' => array(self::BELONGS_TO, 'PurchaseOrders', 'purchase_orders_id'),
			'crew' => array(self::BELONGS_TO, 'Crew', 'crew_id'),
			'day0' => array(self::BELONGS_TO, 'Day', 'day'),
			'project' => array(self::BELONGS_TO, 'Project', 'project_id'),
			'clientToTaskTypeClient' => array(self::BELONGS_TO, 'ClientToTaskType', 'client_to_task_type_client_id'),
			'clientToTaskTypeTaskType' => array(self::BELONGS_TO, 'ClientToTaskType', 'client_to_task_type_task_type_id'),
			'staff' => array(self::BELONGS_TO, 'Staff', 'staff_id'),
			'assemblies' => array(self::MANY_MANY, 'Assembly', 'task_to_assembly(task_id, assembly_id)'),
			'taskToGenericTaskTypes' => array(self::HAS_MANY, 'TaskToGenericTaskType', 'task_id'),
			'resourceTypes' => array(self::MANY_MANY, 'ResourceType', 'task_to_resource_type(task_id, resource_type_id)'),
			'taskTypes' => array(self::HAS_MANY, 'TaskType', 'template_task_id'),
		);
	}

	public function pivotModels() {
		return array(
			'clientToTaskTypeToDutyTypes' => 'Duty',
			'materials' => 'MaterialToTask',
			'assemblies' => 'TaskToAssembly',
			'resourceTypes' => 'TaskToResourceType',
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'description' => Yii::t('app', 'Description'),
			'day' => null,
			'purchase_orders_id' => null,
			'crew_id' => null,
			'project_id' => null,
			'client_to_task_type_client_id' => null,
			'client_to_task_type_task_type_id' => null,
			'staff_id' => null,
			'clientToTaskTypeToDutyTypes' => null,
			'materials' => null,
			'reschedules' => null,
			'reschedules1' => null,
			'purchaseOrders' => null,
			'crew' => null,
			'day0' => null,
			'project' => null,
			'clientToTaskTypeClient' => null,
			'clientToTaskTypeTaskType' => null,
			'staff' => null,
			'assemblies' => null,
			'taskToGenericTaskTypes' => null,
			'resourceTypes' => null,
			'taskTypes' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('description', $this->description, true);
		$criteria->compare('day', $this->day);
		$criteria->compare('purchase_orders_id', $this->purchase_orders_id);
		$criteria->compare('crew_id', $this->crew_id);
		$criteria->compare('project_id', $this->project_id);
		$criteria->compare('client_to_task_type_client_id', $this->client_to_task_type_client_id);
		$criteria->compare('client_to_task_type_task_type_id', $this->client_to_task_type_task_type_id);
		$criteria->compare('staff_id', $this->staff_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}